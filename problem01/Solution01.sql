WITH RECURSIVE TOPS  AS (           -- make 1 to n range
	SELECT 1 AS n
	UNION ALL
	SELECT n + 1 FROM TOPS  WHERE n < 10
), DAY_MENU_LOG (DAYOFWEEK, LOG_ID, USR_NO, MENU_NM) AS (          -- convert log_timestamp to weekday
	SELECT WEEKDAY(STR_TO_DATE(LOG_TKTM, '%Y%m%d%H%i%S')) , ML.LOG_ID, ML.USR_NO, ML.MENU_NM 
	FROM MENU_LOG AS ML WHERE MENU_NM != 'logout' AND MENU_NM != 'login'
), RANK_DAY_AND_LOG (DAYOFWEEK, CONTENTS, DAYRANK) AS (            -- count access number of menu and rank 
	SELECT DAYOFWEEK, Concat(MENU_NM , '(', COUNT(LOG_ID) ,')') AS CONTENTS , ROW_NUMBER() OVER(
	PARTITION BY
		DAYOFWEEK
	ORDER BY
		COUNT(LOG_ID) DESC, binary(MENU_NM) ASC
	) DayRank
	FROM DAY_MENU_LOG 
	GROUP BY DAYOFWEEK, MENU_NM
) 

-- make summary of top 10 access number based on weekday
SELECT TOPS.n as Top, MON.Monday, TUE.Tuesday, WES.Wednesday, THU.Thursday, FRI.Friday, SAT.Saturday, SUN.Sunday FROM TOPS
LEFT JOIN 
	(SELECT TOPS.n as n, IFNULL(CONTENTS, '-') AS Monday 
	FROM (SELECT * FROM RANK_DAY_AND_LOG WHERE DAYOFWEEK = 0 ORDER BY DAYRANK, binary(CONTENTS) LIMIT 10) t RIGHT OUTER JOIN TOPS ON t.DAYRANK = TOPS.n) MON
	ON TOPS.n = MON.n
LEFT JOIN 
	(SELECT TOPS.n as n, IFNULL(CONTENTS, '-') AS Tuesday 
	FROM (SELECT * FROM RANK_DAY_AND_LOG WHERE DAYOFWEEK = 1 ORDER BY DAYRANK, binary(CONTENTS) LIMIT 10) t RIGHT OUTER JOIN TOPS ON t.DAYRANK = TOPS.n) TUE
	ON TOPS.n = TUE.n
LEFT JOIN 
	(SELECT TOPS.n as n, IFNULL(CONTENTS, '-') AS Wednesday 
	FROM (SELECT * FROM RANK_DAY_AND_LOG WHERE DAYOFWEEK = 2 ORDER BY DAYRANK, binary(CONTENTS) LIMIT 10) t RIGHT OUTER JOIN TOPS ON t.DAYRANK = TOPS.n) WES
	ON TOPS.n = WES.n
LEFT JOIN 
	(SELECT TOPS.n as n, IFNULL(CONTENTS, '-') AS Thursday 
	FROM (SELECT * FROM RANK_DAY_AND_LOG WHERE DAYOFWEEK = 3 ORDER BY DAYRANK, binary(CONTENTS) LIMIT 10) t RIGHT OUTER JOIN TOPS ON t.DAYRANK = TOPS.n) THU
	ON TOPS.n = THU.n
LEFT JOIN 
	(SELECT TOPS.n as n, IFNULL(CONTENTS, '-') AS Friday 
	FROM (SELECT * FROM RANK_DAY_AND_LOG WHERE DAYOFWEEK = 4 ORDER BY DAYRANK, binary(CONTENTS) LIMIT 10) t RIGHT OUTER JOIN TOPS ON t.DAYRANK = TOPS.n) FRI
	ON TOPS.n = FRI.n
LEFT JOIN 
	(SELECT TOPS.n as n, IFNULL(CONTENTS, '-') AS Saturday 
	FROM (SELECT * FROM RANK_DAY_AND_LOG WHERE DAYOFWEEK = 5 ORDER BY DAYRANK, binary(CONTENTS) LIMIT 10) t RIGHT OUTER JOIN TOPS ON t.DAYRANK = TOPS.n) SAT
	ON TOPS.n = SAT.n
LEFT JOIN 
	(SELECT TOPS.n as n, IFNULL(CONTENTS, '-') AS Sunday 
	FROM (SELECT * FROM RANK_DAY_AND_LOG WHERE DAYOFWEEK = 6 ORDER BY DAYRANK, binary(CONTENTS) LIMIT 10) t RIGHT OUTER JOIN TOPS ON t.DAYRANK = TOPS.n) SUN
	ON TOPS.n = SUN.n;